syntax = "proto3";

option go_package = "examplepb";
package grpc.gateway.examples.examplepb;

import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "message.proto";
import "message2.proto";
import "google/protobuf/timestamp.proto";

// Intentionaly complicated message type to cover much features of Protobuf.
// NEXT ID: 30
message ABitOfEverything {
	// Nested is nested type.
	message Nested {
		// name is nested field.
		string name = 1;
		uint32 amount = 2;
		// DeepEnum is one or zero.
		enum DeepEnum {
			// FALSE is false.
			FALSE = 0;
			// TRUE is true.
			TRUE = 1;
		}
		DeepEnum ok = 3;
	}
	Nested single_nested = 25;

	string uuid = 1;
	repeated Nested nested = 2;
	float float_value = 3;
	double double_value = 4;
	int64 int64_value = 5;
	uint64 uint64_value = 6;
	int32 int32_value = 7;
	fixed64 fixed64_value = 8;
	fixed32 fixed32_value = 9;
	bool bool_value = 10;
	string string_value = 11;
	bytes bytes_value = 29;
	uint32 uint32_value = 13;
	NumericEnum enum_value = 14;
	sfixed32 sfixed32_value = 15;
	sfixed64 sfixed64_value = 16;
	sint32 sint32_value = 17;
	sint64 sint64_value = 18;
	repeated string repeated_string_value = 19;
	oneof oneof_value {
		google.protobuf.Empty oneof_empty = 20;
		string oneof_string = 21;
	}

	map<string, NumericEnum> map_value = 22;
	map<string, string> mapped_string_value = 23;
	map<string, Nested> mapped_nested_value = 24;

	string nonConventionalNameValue = 26;

	google.protobuf.Timestamp timestamp_value = 27;

        // repeated enum value. it is comma-separated in query
	repeated NumericEnum repeated_enum_value = 28;
}

message Body {
	string name = 1;
}

message MessageWithBody {
	string id = 1;
	Body data = 2;
}


// NumericEnum is one or zero.
enum NumericEnum {
	// ZERO means 0
	ZERO = 0;
	// ONE means 1
	ONE  = 1;
}

// ABitOfEverything service is used to validate that APIs with complicated
// proto messages and URL templates are still processed correctly.
service ABitOfEverythingService {

	rpc Create(ABitOfEverything) returns (ABitOfEverything) {}

	rpc CreateBody(ABitOfEverything) returns (ABitOfEverything) {}

	rpc Lookup(sub2.IdMessage) returns (ABitOfEverything) {}

	rpc Update(ABitOfEverything) returns (google.protobuf.Empty) {}

	rpc Delete(sub2.IdMessage) returns (google.protobuf.Empty) {}

	rpc GetQuery(ABitOfEverything) returns (google.protobuf.Empty) {}

	// Echo allows posting a StringMessage value.
	//
	// It also exposes multiple bindings.
	//
	// This makes it useful when validating that the OpenAPI v2 API
	// description exposes documentation correctly on all paths
	// defined as additional_bindings in the proto.
	rpc Echo(grpc.gateway.examples.sub.StringMessage) returns (grpc.gateway.examples.sub.StringMessage) {}

	rpc DeepPathEcho(ABitOfEverything) returns (ABitOfEverything) {}

	rpc NoBindings(google.protobuf.Duration) returns (google.protobuf.Empty) {}

	rpc Timeout(google.protobuf.Empty) returns (google.protobuf.Empty) {}

	rpc ErrorWithDetails(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    rpc GetMessageWithBody(MessageWithBody) returns (google.protobuf.Empty) {}

    rpc PostWithEmptyBody(Body) returns (google.protobuf.Empty) {}
}

// camelCase and lowercase service names are valid but not recommended (use TitleCase instead)
service camelCaseServiceName {
    rpc Empty(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

service AnotherServiceWithNoBindings {
	rpc NoBindings(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}
